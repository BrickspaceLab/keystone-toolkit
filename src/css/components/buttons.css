/* BUTTONS */
/* ======= */

@layer components {
  /* standard button */
  .btn {
    @apply type__nav border__button--radius !color__button-primary border__button animation-500 animation-300 relative inline-flex h-[44px] w-auto cursor-pointer items-center justify-center overflow-hidden px-6 py-2 text-center !no-underline;
    text-transform: var(--type__button-capiliziation) !important;

    * {
      @apply type__nav !no-underline;
      text-transform: var(--type__button-capiliziation) !important;
    }

    &__content {
      @apply type__nav flex items-center;
    }

    /* states */
    &--hover,
    &:hover {
      @apply no-underline;
    }
    &--focus,
    &:focus-visible {
      @apply border--focus;
    }
    &--disabled,
    &:disabled {
      @apply cursor-not-allowed opacity-50;
    }

    /* sizes */
    &--small {
      @apply type--small h-auto max-h-[44px] px-4;
    }
    &--small > * {
      @apply type--small;
    }
    &--smaller {
      @apply type--smaller h-auto max-h-[44px] px-4 py-1;
    }
    &--smaller > * {
      @apply type--smaller;
    }
    &--big {
      @apply type--big px-9 py-3;
    }
    &--big > * {
      @apply type--big;
    }

    /* standard colors */
    &--secondary {
      @apply !color__button-secondary;
    }
    &--tertiary {
      @apply !color__button-tertiary;
    }
    &--neutral {
      @apply !color__button-neutral;
    }
    &--plain {
      @apply !color__button-plain;
    }
    &--transparent {
      @apply !color__button-transparent;
    }
    &--diff {
      background-color: #fff;
      border-color: #fff;
      color: #000;
      * {
        color: #000;
      }
    }

    &--outline {
      @apply border--button-width;
      background-color: transparent !important;
      color: var(--color__text-light) !important;
      border-color: var(--color__text-light) !important;
      &:hover {
        background-color: transparent !important;
        border-color: var(--color__text-light) !important;
        @apply border--focus--underline;
      }
      * {
        color: var(--color__text-light) !important;
      }
    }
    &--outline-alt {
      @apply border--button-width;
      background-color: transparent !important;
      color: var(--color__text-dark) !important;
      border-color: var(--color__text-dark) !important;
      &:hover {
        background-color: transparent !important;
        border-color: var(--color__text-dark) !important;
        @apply border--focus--underline;
      }
      * {
        color: var(--color__text-dark) !important;
      }
    }

    &--minimal {
      background-color: transparent !important;
      color: var(--color__text-light) !important;
      @apply type__body min-h-0 min-w-0 rounded-none border-none p-0 normal-case;
      &:hover {
        background-color: transparent !important;
        @apply border--focus--underline;
      }
      &:focus-visible {
        @apply border--focus--inset;
      }
      * {
        color: var(--color__text-light) !important;
      }
    }

    &--minimal-alt {
      background-color: transparent !important;
      color: var(--color__text-dark) !important;
      @apply type__body min-h-0 min-w-0 rounded-none border-none p-0 normal-case;
      &:hover {
        background-color: transparent !important;
        @apply border--focus--underline;
      }
      &:focus-visible {
        @apply border--focus--inset;
      }
      * {
        color: var(--color__text-dark) !important;
      }
    }

    /* button animations */
    /* - set style for default loading button */
    &--load {
      @apply relative;
    }
    &--loading {
      cursor: wait;
    }
    /* - make sure spinner is spinner */
    &__spinner {
      @apply invisible absolute left-2/4 top-2/4 flex w-11/12 -translate-x-2/4 -translate-y-2/4 transform items-center justify-center bg-inherit;
      svg {
        @apply animate-spinslow m-auto;
      }
    }
    /* - when loading class used, hide content and show spinner */
    &--loading &__content {
      @apply invisible;
    }
    &--loading &__spinner {
      @apply visible;
    }
  }
}
